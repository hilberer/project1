{"version":3,"sources":["routes/RoutingPath.ts","components/addbutton/AddButton.tsx","components/slider/Slider.tsx","shared/provider/PizzaNameProvider.tsx","shared/provider/StarwarsCharProvider.tsx","pages/Home.tsx","shared/provider/UserProvider.tsx","pages/SignInView.tsx","pages/navigationtabspages/newrecipe/NewRecipe.tsx","shared/api/StarwarsAPI.ts","shared/api/service/StarwarsAPIService.ts","pages/navigationtabspages/addingredient/AddIngredient.tsx","pages/authenticatedpages/SettingsView.tsx","shared/api/BackendAPI.ts","shared/api/service/BackendAPIService.ts","pages/navigationtabspages/testapi/TestApiView.tsx","routes/Routes.tsx","components/navigation/mobilenavigation/hamburgerbutton/HamburgerButton.tsx","components/navigation/mobilenavigation/sidebar/SideBar.tsx","components/backdrop/BackDrop.tsx","components/navigation/mobilenavigation/MobileNavigation.tsx","shared/images/minilogo.png","shared/images/logo.png","components/profile/profileDropDown/ProfileDropDown.tsx","components/profile/Profile.tsx","components/navigation/desktopnavigationtabs/DesktopNavigationTabs.tsx","components/navigation/desktopnavigation/DesktopNavigation.tsx","hooks/useWindowDimensions.tsx","components/navigation/Navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AddButton","history","useHistory","className","onClick","push","RoutingPath","Slider","props","useState","value","slider","setSlider","type","step","min","max","onChange","e","newValue","parseInt","target","onChangeValue","pizzaContext","createContext","PizzaNameProvider","pizzas","setPizzas","children","Provider","StarwarsCharContext","StarwarsCharProvider","name","hair_color","birth_year","height","char","setChar","Home","useContext","console","log","defaultLength","map","pizza","ingredients","i","quantity","UserContext","UserProvider","authUser","setAuthUser","SignInView","username","password","loginCredentials","setLoginCredentials","setAuthuser","placeholder","event","localStorage","setItem","JSON","stringify","NewRecipe","createPizza","setCreatePizza","mushroom","setMushroom","cheese","setCheese","onion","setOnion","ham","setHam","useEffect","undefined","Array","concat","alert","StarwarsAPI","Axios","create","baseURL","characterNumber","http","get","AddIngredient","starwarsData","setStarwarsData","count","setCount","getDataFromStarWarsAPI2","a","StarwarsAPIService","response","data","gender","SettingsView","BackendAPI","headers","createUser","post","getAllUsers","TestApiView","users","setUsers","loading","newUser","setNewUser","x","BackendAPIService","error","fetchData","y","Routes","allowedView","notAllowedView","getItem","storage","parse","exact","path","component","HamburgerButton","drawerHandler","SideBar","handleRedirect","selectedPage","drawerIsOpen","BackDrop","MobileNavigation","openDrawer","setOpenDrawer","ProfileDropDown","removeItem","Profile","src","alt","DesktopNavigationTabs","DesktopNavigation","Logo","Minilogo","getWindowDimensions","window","width","innerWidth","innerHeight","Navigation","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaae9290.chunk.js","sourcesContent":["const home = '/'\r\nconst signin = '/signin'\r\nconst newrecipe = '/newrecipe'\r\nconst addingredient = '/addingredient'\r\nconst testapi = '/testapi'\r\n\r\nconst settingsView = '/settingsView'\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    home,\r\n    signin,\r\n    newrecipe,\r\n    addingredient,\r\n    settingsView,\r\n    testapi\r\n}","import RoutingPath from '../../routes/RoutingPath'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './AddButton.css'\r\n\r\nexport const AddButton = () => {\r\n\r\n    const history = useHistory()\r\n    return (\r\n        <div className=\"addWrapper\">\r\n            <button className=\"addButton\" onClick={() => history.push(RoutingPath.newrecipe)}>\r\n                <div className=\"addButton_Line1\">\r\n                    <div className=\"addButton_Line2\"></div>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import './Slider.css'\r\nimport { ChangeEvent } from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport const Slider = (props: { step: number, min: number, max: number, value: number, defaultLength: number, onChangeValue: (e: number) => void}) => {\r\n\r\n    const [slider, setSlider] = useState<number>(props.value)\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const newValue = parseInt(e.target.value)\r\n        setSlider(newValue)\r\n        props.onChangeValue(newValue)\r\n    }\r\n    return (\r\n        <div className=\"sliderWrapper\">\r\n            <input\r\n                className=\"range-slider\"\r\n                type=\"range\"\r\n                step={props.step}\r\n                min={props.min}\r\n                max={props.max}\r\n                value={slider}\r\n                onChange={handleChange}\r\n            />\r\n            <div className=\"value\">{slider}%</div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, createContext } from 'react'\r\nimport { Pizza } from '../interface/Recipe'\r\n\r\nexport const pizzaContext  = createContext<any>('')\r\n\r\nexport const PizzaNameProvider = (props: { children: React.ReactChild } ) => {\r\n\r\n    const [pizzas, setPizzas] = useState<Array<Pizza>>([])\r\n    const { children } = props\r\n    return (\r\n        <pizzaContext.Provider value={[pizzas, setPizzas]}>\r\n            { children }\r\n        </pizzaContext.Provider>\r\n    )\r\n}\r\n","import { useState, createContext } from 'react'\r\nimport { StarwarsChar } from '../interface/StarwarsChar'\r\n\r\nexport const StarwarsCharContext = createContext<any>('')\r\n\r\nexport const StarwarsCharProvider = (props: { children: React.ReactChild } ) => {\r\n\r\n    const [char, setChar] = useState<StarwarsChar>({name:'', hair_color:'', birth_year: '', height: 0})\r\n    const { children } = props\r\n    return (\r\n        <StarwarsCharContext.Provider value={ [char, setChar] }>\r\n            { children }\r\n        </StarwarsCharContext.Provider>\r\n    )\r\n}","import './Home.css'\r\nimport { AddButton } from '../components/addbutton/AddButton'\r\nimport { Slider } from '../components/slider/Slider'\r\nimport { useContext } from 'react'\r\nimport { pizzaContext } from '../shared/provider/PizzaNameProvider'\r\nimport { Pizza, Ingredient } from '../shared/interface/Recipe'\r\nimport { StarwarsCharContext } from '../shared/provider/StarwarsCharProvider'\r\n\r\n\r\nexport const Home = () => {\r\nconst [pizzas] = useContext<any>(pizzaContext)\r\nconst [char] = useContext<any>(StarwarsCharContext)\r\n\r\nconst handleChange = (value: number) => {\r\n    console.log(value)\r\n}\r\nconst displayData = () => {\r\n    return (\r\n        <div>\r\n            {pizzas.map(\r\n                (pizza: Pizza) => <div><h1>{pizza.name}</h1>\r\n                    {pizza.ingredients?.map((i: Ingredient) =>\r\n                        <div>{i.name}{i.quantity}</div>)\r\n                    }\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n    return (\r\n        <div className=\"homeWrapper\">\r\n            <AddButton />\r\n            <Slider min={0} max={100} step={10} value={50} onChangeValue={handleChange} defaultLength={100}/>\r\n            {displayData()}\r\n            <h1>{char.name}</h1>\r\n            <h1>{char.birth_year}</h1>\r\n            <h1>{char.hair_color}</h1>\r\n            <h1>{char.height}</h1>\r\n            <br/>\r\n\r\n        </div>\r\n    )\r\n}","import { useState, createContext } from 'react'\r\n\r\nexport const UserContext = createContext<any>(null)\r\n\r\nexport const UserProvider = (props: { children: React.ReactChild }) => {\r\n    const [authUser, setAuthUser] = useState()\r\n    const { children } = props\r\n    return (\r\n        <UserContext.Provider value={[authUser, setAuthUser]}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}","import { useState, useContext } from 'react'\r\nimport { loginCredentials } from '../shared/interface/Interface'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../routes/RoutingPath'\r\nimport { UserContext } from '../shared/provider/UserProvider'\r\nimport './SignInView.css'\r\n\r\nexport const SignInView = () => {\r\n\r\n    const [loginCredentials, setLoginCredentials] = useState<loginCredentials>({ username: '', password: ''})\r\n    const history = useHistory()\r\n    const [, setAuthuser] = useContext(UserContext)\r\n\r\n    const signIn = () => {\r\n\r\n        localStorage.setItem('credentials', JSON.stringify(loginCredentials))\r\n        setAuthuser(loginCredentials)\r\n        history.push(RoutingPath.home)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"loginWrapper\">\r\n            <form className=\"loginForm\">\r\n                <input\r\n                placeholder='username'\r\n                onChange={event => setLoginCredentials({ ...loginCredentials, username: event.target.value})}/> <br/>\r\n                <input\r\n                placeholder='password'\r\n                onChange={event => setLoginCredentials({ ...loginCredentials, password: event.target.value})}\r\n                />\r\n                <button className=\"loginButton\" onClick={() => signIn()}>Sign in</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useContext, useEffect} from 'react'\r\nimport { Ingredient, Pizza } from '../../../shared/interface/Recipe'\r\nimport { pizzaContext } from '../../../shared/provider/PizzaNameProvider'\r\nimport { Slider } from '../../../components/slider/Slider'\r\nimport './NewRecipe.css'\r\n\r\n\r\nexport const NewRecipe = () => {\r\n\r\n    const [createPizza, setCreatePizza] = useState<Pizza>({ name: '', ingredients:[]})\r\n    const [pizzas, setPizzas] = useContext(pizzaContext)\r\n    const [mushroom, setMushroom] = useState<Ingredient>({name:'mushroom ', quantity: 0})\r\n    const [cheese, setCheese] = useState<Ingredient>({name: 'cheese ', quantity: 0})\r\n    const [onion, setOnion] = useState<Ingredient>({name: 'onion ', quantity: 0})\r\n    const [ham, setHam] = useState<Ingredient>({name: 'Ham ', quantity: 0})\r\n\r\n/*\r\n    const handleChange = (value: number) => {\r\n        console.log(value)\r\n    } */\r\n\r\n    const handleMushroom = (value: number) => {\r\n        setMushroom({ ...mushroom, quantity: value })\r\n    }\r\n    const handleCheese = (value: number) => {\r\n        setCheese({...cheese, quantity: value})\r\n    }\r\n    const handleOnion = (value: number) => {\r\n        setOnion({...onion, quantity: value})\r\n    }\r\n    const handleHam = (value: number) => {\r\n        setHam({...ham, quantity: value})\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if (createPizza === undefined || createPizza.ingredients === undefined) {return}\r\n        createPizza.ingredients = new Array<Ingredient>()\r\n        createPizza.ingredients.push(mushroom)\r\n        createPizza.ingredients.push(cheese)\r\n        createPizza.ingredients.push(onion)\r\n        createPizza.ingredients.push(ham)\r\n        setPizzas(pizzas.concat(createPizza)); alert('Recipe created')\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(pizzas)\r\n    },[pizzas])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n            placeholder=\"name\"\r\n            onChange={ (event) => setCreatePizza({...createPizza, name: event.target.value})} />\r\n            <button className=\"button-Create\" onClick={handleClick}>Create</button>\r\n            <button className=\"button-Save\">Save</button>\r\n            <br/>\r\n            <label>Cheese</label>\r\n            <Slider min={0} max={100} step={10} value={0} onChangeValue={handleCheese} defaultLength={100}/>\r\n            <label>Mushroom</label>\r\n            <Slider min={0} max={100} step={10} value={0} onChangeValue={handleMushroom} defaultLength={100}/>\r\n            <label>Onion</label>\r\n            <Slider min={0} max={100} step={10} value={0} onChangeValue={handleOnion} defaultLength={100}/>\r\n            <label>Ham</label>\r\n            <Slider min={0} max={100} step={10} value={0} onChangeValue={handleHam} defaultLength={100}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import Axios from 'axios'\r\n\r\nconst URL = 'https://swapi.dev/api/'\r\nconst StarwarsAPI = Axios.create({\r\n    baseURL: URL\r\n})\r\nexport default StarwarsAPI","import http from '../StarwarsAPI'\r\n\r\nconst getDataLukeSkywalker = () => {\r\n    return http.get('/people/1')\r\n}\r\n\r\nconst getStarWarsCharacter = (characterNumber: number) => {\r\n    return http.get(`/people/${characterNumber}`)\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    getDataLukeSkywalker,\r\n    getStarWarsCharacter\r\n}","/* import Axios from 'axios' */\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport StarwarsAPIService from '../../../shared/api/service/StarwarsAPIService'\r\nimport { StarwarsCharContext } from '../../../shared/provider/StarwarsCharProvider'\r\n\r\n\r\nexport const AddIngredient = () => {\r\n    const [starwarsData, setStarwarsData] = useState<any>()\r\n    const [count, setCount] = useState(1)\r\n    const [char, setChar] = useContext(StarwarsCharContext)\r\n\r\n    const makeSureCountWillNeverGoBelowValue1 = () => {\r\n        (count <= 1) ? setCount(1) : setCount(count - 1)\r\n    }\r\n\r\n/*     const getDataFromStarWarsAPI = () => {\r\n        Axios.get(`https://swapi.dev/api/people/${count}/`)\r\n        .then(response => setStarwarsData(response))\r\n        .catch(error => console.log(error))\r\n    } */\r\n\r\n    const getDataFromStarWarsAPI2 = async () => {\r\n        try {\r\n            const response = await StarwarsAPIService.getStarWarsCharacter(count)\r\n            setStarwarsData(response)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataFromStarWarsAPI2()\r\n        console.log(char)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [count])\r\n\r\n/*     const saveChar = () => {\r\n        setChar(starwarsData)\r\n    } */\r\n\r\n    return (\r\n        <div>\r\n           <h1>Name: {starwarsData?.data?.name}</h1>\r\n           <h1>Hair Color: {starwarsData?.data?.hair_color}</h1>\r\n           <h1>Gender: {starwarsData?.data?.gender}</h1>\r\n           <h1>Birth year: {starwarsData?.data?.birth_year}</h1>\r\n           <h1>Height: {starwarsData?.data?.height}</h1>\r\n           <button onClick={() => makeSureCountWillNeverGoBelowValue1()}>Get previous character</button>\r\n           <button onClick={() => setCount(count + 1)}>Get next character</button>\r\n           <button onClick={() => setChar(starwarsData.data)}>Save Character</button>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const SettingsView = () => {\r\n    return (\r\n        <div>\r\n            <h1>This is the settings view</h1>\r\n        </div>\r\n    )\r\n}\r\n","import Axios from 'axios'\r\n\r\nconst BackendAPI = Axios.create({\r\n    baseURL: 'http://localhost:3002', headers: {'Content-Type': 'application/json'}\r\n})\r\n\r\nexport default BackendAPI","import http from '../BackendAPI'\r\nimport { iCreateNewUser } from '../../interface/Interface'\r\n\r\nconst createUser = async (data: iCreateNewUser) => {\r\n    try {\r\n        return await http.post('/user', data)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n    return {data: []}\r\n}\r\nconst getAllUsers = async () => {\r\n\r\n    try {\r\n        return await http.get('/user')\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n    return {data: []}\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    createUser,\r\n    getAllUsers\r\n}","import BackendAPIService from '../../../shared/api/service/BackendAPIService'\r\nimport { iCreateNewUser } from '../../../shared/interface/Interface'\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport const TestApiView = () => {\r\n\r\n    const [users, setUsers] = useState([])\r\n    const [loading, ] = useState(false)\r\n    const [newUser, setNewUser] = useState<iCreateNewUser> ({\r\n        username: 'hejhej123',\r\n        password: 'secret'\r\n    })\r\n\r\n    const x = async () => {\r\n        try {\r\n           const response = BackendAPIService.createUser(newUser)\r\n           console.log(response)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        const response = await BackendAPIService.getAllUsers()\r\n        setUsers(response.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [loading])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Backend API: </h1>\r\n            <br/>\r\n            <p>USERNAME</p> <input className=\"input1\" onChange={(event) => setNewUser({ ...newUser, username: event.target.value})} /> <br/>\r\n            <p>PASSWORD</p> <input className=\"input1\"/> <br/>\r\n            <p>AGE</p> <input />\r\n            <button onClick={() => x()}>Create user</button>\r\n            <button onClick={() => fetchData()}>Get users</button>\r\n            <h1> Displaying all users</h1>\r\n            {users.map((y: any) => <div><span>{y.username}</span></div>)}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { Home } from '../pages/Home'\r\nimport { SignInView } from '../pages/SignInView'\r\nimport { NewRecipe } from '../pages/navigationtabspages/newrecipe/NewRecipe'\r\nimport { AddIngredient } from '../pages/navigationtabspages/addingredient/AddIngredient'\r\nimport RoutingPath from './RoutingPath'\r\nimport { UserContext } from '../shared/provider/UserProvider'\r\nimport { useEffect, useContext } from 'react'\r\nimport { loginCredentials } from '../shared/interface/Interface'\r\nimport { SettingsView } from '../pages/authenticatedpages/SettingsView'\r\nimport { TestApiView } from '../pages/navigationtabspages/testapi/TestApiView'\r\n\r\n\r\nexport const Routes = (props: { children: React.ReactChild}) => {\r\n    const [authUser, setAuthUser] = useContext(UserContext)\r\n    const { children } = props\r\n\r\n    const blockRouteIfAuthenticated = (allowedView: React.FC, notAllowedView: React.FC) => {\r\n        return !authUser ? allowedView : notAllowedView\r\n    }\r\n\r\n/*     const authenticationRequired = (allowed: React.FC, notAllowed: React.FC) => {\r\n        return authUser ? allowed : notAllowed\r\n    } */\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem('credentials')){\r\n             setAuthUser(() => {\r\n                const storage = localStorage.getItem('credentials')\r\n                if(storage === null){\r\n                    return {username: '', password: ''}\r\n                }\r\n                const user: loginCredentials = JSON.parse(storage)\r\n                return user\r\n\r\n            })\r\n        }\r\n    }, [setAuthUser])\r\n\r\n    return (\r\n        <BrowserRouter>\r\n        {children}\r\n            <Switch>\r\n                <Route exact path={RoutingPath.home} component={Home} />\r\n                <Route exact path={RoutingPath.signin} component={blockRouteIfAuthenticated(SignInView, Home)} />\r\n                <Route exact path={RoutingPath.newrecipe} component={NewRecipe} />\r\n                <Route exact path={RoutingPath.addingredient} component={AddIngredient} />\r\n                {/* <Route component={Home} /> */}\r\n                <Route exact path={RoutingPath.settingsView} component={SettingsView} />\r\n                <Route exact path = {RoutingPath.testapi} component={TestApiView} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import './HamburgerButton.css'\r\n\r\nexport const HamburgerButton = (props: { drawerHandler: Function}) => {\r\n    return (\r\n        <button className=\"toggle-button\" onClick={() => props.drawerHandler(true)}>\r\n            <div className=\"toggle-button_line\"></div>\r\n            <div className=\"toggle-button_line\"></div>\r\n            <div className=\"toggle-button_line\"></div>\r\n\r\n        </button>\r\n    )\r\n}\r\n","import './SideBar.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../../../../routes/RoutingPath'\r\n\r\nexport const SideBar = (props: {drawerIsOpen: boolean, drawerHandler: Function}) => {\r\n\r\n    const history=useHistory()\r\n    const handleRedirect = (selectedPage: string) => {\r\n        history.push(selectedPage)\r\n        props.drawerHandler(false)\r\n    }\r\n    return (\r\n        <div className={props.drawerIsOpen ? 'side-drawer open': 'side-drawer'}>\r\n            <button className=\"sidebarButton\" onClick={()=>props.drawerHandler(false)}>\r\n                <div className=\"sidebarButtonClose1\">\r\n                    <div className=\"sidebarButtonClose2\"></div>\r\n                </div>\r\n\r\n            </button>\r\n\r\n            <ul className=\"sidebarMenu\">\r\n                <li className=\"sidebarLiTags\" onClick={() => handleRedirect(RoutingPath.home)}>Home</li>\r\n                <li className=\"sidebarLiTags\" onClick={() => handleRedirect(RoutingPath.signin)}>Login</li>\r\n                <li className=\"sidebarLiTags\" onClick={() => handleRedirect(RoutingPath.newrecipe)}>New Recipe</li>\r\n                <li className=\"sidebarLiTags\" onClick={() => handleRedirect(RoutingPath.addingredient)}>Add Ingredient</li>\r\n            </ul>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import './BackDrop.css'\r\n\r\nexport const BackDrop = (props: { drawerHandler: Function }) => {\r\n    return (<div onClick={() => props.drawerHandler(false)} className=\"backDrop\" />)\r\n}\r\n","import './MobileNavigation.css'\r\nimport { HamburgerButton } from './hamburgerbutton/HamburgerButton'\r\nimport { SideBar } from './sidebar/SideBar'\r\nimport { useState } from 'react'\r\nimport { BackDrop } from '../../backdrop/BackDrop'\r\n\r\nexport const MobileNavigation = () => {\r\n\r\n\r\n    const [openDrawer, setOpenDrawer] = useState<boolean>(false)\r\n    return (\r\n        <div className=\"mobileNavigationWrapper\">\r\n            <HamburgerButton drawerHandler={setOpenDrawer} />\r\n            <SideBar drawerIsOpen={openDrawer} drawerHandler={setOpenDrawer}/>\r\n            {!openDrawer || <BackDrop drawerHandler={setOpenDrawer} />}\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/minilogo.ed28eebd.png\";","export default __webpack_public_path__ + \"static/media/logo.ad893950.png\";","import './ProfileDropDown.css'\r\nimport { useContext } from 'react'\r\nimport { UserContext } from '../../../shared/provider/UserProvider'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../../../routes/RoutingPath'\r\n\r\n\r\nexport const ProfileDropDown = () => {\r\n    const history = useHistory()\r\n    const [, setAuthUser] = useContext(UserContext)\r\n\r\n    const logout = () => {\r\n\r\n        setAuthUser(false)\r\n        localStorage.removeItem('credentials')\r\n        history.push(RoutingPath.home)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"profileDropdown\">\r\n                <span>alternativ 1</span>\r\n                <span>alternativ 2</span>\r\n                <span>alternativ 3</span>\r\n                <span onClick={() => logout()}>Log out</span>\r\n        </div>\r\n    )\r\n}\r\n","import { useContext } from 'react'\r\nimport { UserContext } from '../../shared/provider/UserProvider'\r\nimport './Profile.css'\r\nimport { ProfileDropDown } from './profileDropDown/ProfileDropDown'\r\n\r\nexport const Profile = () => {\r\n    const [authUser, ] = useContext(UserContext)\r\n\r\n    return (\r\n        <div className=\"profileWrapper\">\r\n            <img className=\"profileImg\"src={'https://thispersondoesnotexist.com/image'} alt={''} />\r\n            {authUser.username}\r\n                <ProfileDropDown />\r\n        </div>\r\n    )\r\n}\r\n","import './DesktopNavigationTabs.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../../../routes/RoutingPath'\r\n\r\nexport const DesktopNavigationTabs = () => {\r\n\r\n    const history = useHistory()\r\n    return (\r\n        <ul className=\"ulTabsWrapper\">\r\n\r\n                <li className=\"liTabs\" onClick= {() => history.push(RoutingPath.home)}>Home</li>\r\n                <li className=\"liTabs\" onClick= {() => history.push(RoutingPath.addingredient)}>Add Ingredient</li>\r\n                <li className=\"liTabs\" onClick= {() => history.push(RoutingPath.newrecipe)}>New Recipe</li>\r\n                <li className=\"liTabs\" onClick= {() => history.push(RoutingPath.testapi)}>Test API</li>\r\n\r\n        </ul>\r\n    )\r\n}\r\n","import './DesktopNavigation.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport RoutingPath from '../../../routes/RoutingPath'\r\nimport Minilogo from '../../../shared/images/minilogo.png'\r\nimport Logo from '../../../shared/images/logo.png'\r\nimport { useContext } from 'react'\r\nimport { UserContext } from '../../../shared/provider/UserProvider'\r\nimport { Profile } from '../../profile/Profile'\r\nimport { DesktopNavigationTabs } from '../desktopnavigationtabs/DesktopNavigationTabs'\r\n\r\nexport const DesktopNavigation = () => {\r\n    const history = useHistory()\r\n    const [authUser, ] = useContext(UserContext)\r\n\r\n    const displaySignInButtonOrUserNameDependingOnAuthentication = () => {\r\n        return authUser\r\n            ? <div className=\"profile\"><Profile /></div>\r\n            : <span className=\"signInButton\" onClick= {() => history.push(RoutingPath.signin)}>Login</span>\r\n    }\r\n\r\n    return (\r\n        <div className=\"desktopNavigationWrapper\">\r\n\r\n                <img className=\"navigationLogotype1\"\r\n                src={Logo}\r\n                alt={''}\r\n                />\r\n                <div className=\"desktopNavigationTabs\">\r\n                    <DesktopNavigationTabs />\r\n                </div>\r\n                {displaySignInButtonOrUserNameDependingOnAuthentication()}\r\n                <img className=\"navigationLogotype2\"\r\n                src={Minilogo}\r\n                alt={''}/>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\n\r\nconst getWindowDimensions = () => {\r\n    const {innerWidth: width, innerHeight: height } = window\r\n    return { width, height }\r\n}\r\n\r\nexport const useWindowDimensions = () => {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions)\r\n    const handleResize = () => { setWindowDimensions(getWindowDimensions()) }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize)\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    }, [])\r\n    return windowDimensions\r\n}","import { MobileNavigation } from './mobilenavigation/MobileNavigation'\r\nimport { DesktopNavigation} from './desktopnavigation/DesktopNavigation'\r\nimport './Navigation.css'\r\nimport { useWindowDimensions } from '../../hooks/useWindowDimensions'\r\n\r\nexport const Navigation = () => {\r\n\r\n    const { width } = useWindowDimensions()\r\n    const displayNavigationDependingOnDevice = () => {\r\n\r\n        return (width <= 1000)\r\n            ? <MobileNavigation/>\r\n            : <DesktopNavigation/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n{/*             <span className=\"desktopNav\"><DesktopNavigation/></span>\r\n            <span className=\"MobileNavigation\"><MobileNavigation/></span> */}\r\n  {/*           <span className=\"mobileNav\"><ToggleButton className=\"button\" img={Navicon} img2={CloseX}><MobileNavigation/></ToggleButton></span> */}\r\n            {displayNavigationDependingOnDevice()}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Routes } from './routes/Routes'\nimport './shared/css/Global.css'\nimport { UserProvider } from './shared/provider/UserProvider';\nimport { Navigation } from './components/navigation/Navigation';\nimport { PizzaNameProvider } from './shared/provider/PizzaNameProvider'\nimport { StarwarsCharProvider } from './shared/provider/StarwarsCharProvider'\n\nfunction App() {\n  return (\n    <StarwarsCharProvider>\n    <PizzaNameProvider>\n    <UserProvider>\n      <Routes>\n        <Navigation />\n      </Routes>\n    </UserProvider>\n    </PizzaNameProvider>\n    </StarwarsCharProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}